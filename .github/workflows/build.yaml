# Based on https://github.com/robbert-vdh/nih-plug/blob/36ee023fb38e2d1ecb38486bb2bceea07e60fc48/.github/workflows/build.yml

name: Automated Builds
on:
  push:
    branches:
      - '**'
    tags:
      - '*'
  pull_request:
    branches:
      - master

defaults:
  run:
    # This otherwise gets run under dash which does not support brace expansion
    shell: bash

jobs:
#    - name: Release
#      uses: softprops/action-gh-release@v1
#      if: startsWith(github.ref, 'refs/tags/')
#      with:
#        files: |
#        body: |
#          This is an automated release of ${{ github.ref }}.
#          It contains the following plugins:
#          ${{ steps.get_plugins.outputs.PLUGINS }}
#        draft: false
#        prerelease: false
  build:
    strategy:
      matrix:
        include:
          - { name: ubuntu-20.04,       os: ubuntu-20.04,   cross-target: '' }
          #- { name: macos-universal,    os: macos-11,       cross-target: aarch64-apple-darwin }
          #- { name: windows,            os: windows-latest, cross-target: '' }
    name: Package plugin binaries
    if: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Fetch all git history
        run: git fetch --force --prune --tags --unshallow

      - name: Install dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev libgl-dev libjack-dev libx11-xcb-dev  libxcb1-dev libxcb-dri2-0-dev libxcb-icccm4-dev libxcursor-dev libxkbcommon-dev libxcb-shape0-dev libxcb-xfixes0-dev

      - uses: actions/cache@v3
        # FIXME: Caching `target/` causes the Windows runner to blow up after some time
        if: startsWith(matrix.os, 'windows')
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ matrix.name }}-${{ matrix.cross-target }}
      - uses: actions/cache@v3
        if: "!startsWith(matrix.os, 'windows')"
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ matrix.name }}-${{ matrix.cross-target }}

      - name: Set up Rust toolchain
        # Needed for SIMD
        uses: dtolnay/rust-toolchain@nightly
        with:
          # The macOS AArch64 build is done from an x86_64 macOS CI runner, so
          # it needs to be cross compiled
          targets: ${{ matrix.cross-target }}
      - uses: actions-rs/cargo@v1
        env:
          VERSION: '${{ steps.get_version.outputs.VERSION }}'
          REPOSITORY_NAME: '${{ steps.get_repository_name.outputs.REPOSITORY_NAME }}'
        with:
          command: install
          args: '--git https://github.com/robbert-vdh/nih-plug.git cargo-nih-plug --target-dir ~/target-cargo-nih-plug'
      - name: Package all targets from bundler.toml
        # Instead of hardcoding which targets to build and package, we'll
        # package everything that's got en entry in the `bundler.toml` file
        run: |
          # Building can be sped up by specifying all packages in one go
          package_args=()
          for package in $(cargo xtask known-packages); do
            package_args+=("-p" "$package")
          done

          runner_name=${{ matrix.name }}
          if [[ $runner_name = 'macos-universal' ]]; then
            export MACOSX_DEPLOYMENT_TARGET=10.13
            cargo xtask bundle-universal "${package_args[@]}" --release
          else
            cross_target=${{ matrix.cross-target }}
            if [[ -n $cross_target ]]; then
              package_args+=("--target" "$cross_target")
            fi

            cargo xtask bundle "${package_args[@]}" --release
          fi

      - name: Determine build archive name
        run: |
          # Windows (usually) doesn't like colons in file names
          echo "ARCHIVE_NAME=live-sampler-$(date -u +"%Y-%m-%d-%H%m%S")-${{ matrix.name }}" >> "$GITHUB_ENV"
      - name: Move all packaged plugin into a directory
        run: |
          # GitHub Action strips the top level directory, great, have another one
          mkdir -p "$ARCHIVE_NAME/$ARCHIVE_NAME"
          mv target/bundled/* "$ARCHIVE_NAME/$ARCHIVE_NAME"
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARCHIVE_NAME }}
          path: ${{ env.ARCHIVE_NAME }}

#      - name: Compress
#        # See files
#        run: |
#          zip "$ARCHIVE_NAME/$ARCHIVE_NAME.zip" -r "$ARCHIVE_NAME/$ARCHIVE_NAME"
  fake-build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Make files
        run: |
          mkdir live-sampler-files
          dd if=/dev/urandom of=./live-sampler-files/a bs=1M count=1
          dd if=/dev/urandom of=./live-sampler-files/b bs=1M count=1
      - uses: actions/upload-artifact@v4
        with:
          name: live-sampler-files
          path: live-sampler-files

  release:
    needs:
      - fake-build
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v3

#    - name: Make a 1M random binary file
#      run: |
#        dd if=/dev/urandom of=my-1m-file bs=1M count=1
#
#    - uses: actions/upload-artifact@v4
#      with:
#        name: my-1m-file
#        path: my-1m-file
#
#    - name: Remove file and wait
#      run: |
#        rm my-1m-file
#        sleep 10

    - name: Download Artifacts
      uses: actions/download-artifact@v4

    - name: List Files
      run: find .

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          live-sampler-*
